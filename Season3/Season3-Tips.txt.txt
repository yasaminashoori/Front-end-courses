TIPS for box model : 
With the help of Margin we can make distance tas from each others and with padding make distance tag from it's border.
Browser takes 16 px padding always by default.
We have a situation that called margin collapsing, it happened when we have two margin around each other and we want to take them 
margin, but the bigger margin will be applied or one of them if they are equal.
When want to distence an element from toop, left, bottom or right give them margin but if we want to distance a content from it's 
border give them padding.

TIPS for box sizing : 
When we add padding and marign to the box with the specified width and height the size of the box will be changed because of the box-sizing's 
value sets on content-box and to remove this sets that to border-box.
And for the before and after too. but if we want to puth the boxes on one line and give them width and height : set the display to inline-block.

TIPS for measuring unit : 
We have two types of units : absolute and relative, the absolute examples are pt, px, ch, mm, cm and for the relative type are : %, vw, vh, rem, em.
% : based on size of parent container.
vw and vh : viewport height and width current or root
it will get height when the content is inside it.

TIPS for Overflow : 
For control over the overflow we can add overflow auto or scroll, auto is better for when the content doesn't have overflow.
And text overflow, when want to ahow something else to user if the text is overflowing : always used together
white-space: nowrap;
overflow: hidden;
text-overflow: ellipsis;

TIPS for position : 
 /* position: relative;  */
    /* reletive for move the item don't work if it be static. releative has nothing to do with others*/
    /* absolute: look  AT parent */
    /* top: 0px;
    right: 0px; */
    /* z-index: -3; */
    position: fixed; /*this used for advertisments and menue foe menue : top=0 width:100%*/
    /* nesbat be borwser/viewport fixed */
    top: 0;
    left: 30%;
    width: 50%;
    /* bottom: 0;
    right: 0; */
    /* border-radius: 50%;   */
    /* top: 30px; */
    /* left: 20px; */
    /* position: sticky; top=0  width=100% sticky menues . ta ghabl noghte khas farghi nadare ama badesh stick mishe  */





/* flex direction if be row :
 main(justify content) works horizontal(x)
column => MAIN (Y)
row => cross(align-items) = y  
column => cross(x)
  */


  grid-column: 1/3; 
     or 1 / span 3 



breakpoint yani az in nothte be bad intory namayesh dade beshe 
with flex we should do more work and it is 1D so nested blocks we need but greed is 2D 
mobile first and desktop first and mobile first is most optimze 



@media print {
  .container {
    font-size: 12px;
  }
}

/*  this print will active when use button crtl p the font will be 12p x*/


/* @media type and condition/ type : print/ screen */
